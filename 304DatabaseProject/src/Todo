Lab Manager
-update temp (check)

Researcher
- addSample
- editSample

        //todo addSampleScene////////////////////////////////////////////////////////////////////////////////////////////////
        Label sampleType = new Label("Sample Type");
        ChoiceBox sampleTypeBox = new ChoiceBox();
        sampleTypeBox.setItems(FXCollections.observableArrayList("Bacterial Culture", "Glycerol Stock", "Plate", "DNA Sample", "Plasmid", "Ligation", "Genomic", "Digest"));
        Label strain = new Label("Strain:");
        TextField strainTextField = new TextField();
        Label volume = new Label("Volume(mL):");
        TextField volumeTextField = new TextField();
        volumeTextField.lengthProperty().addListener(new ChangeListener<Number>(){

            @Override
            public void changed(ObservableValue<? extends Number> observable, Number oldValue, Number newValue) {

                if(newValue.intValue() > oldValue.intValue()){
                    char ch = volumeTextField.getText().charAt(oldValue.intValue());
                    System.out.println("Length:"+ oldValue+"  "+ newValue +" "+ch);

                    //Check if the new character is the number or other's
                    if(!(ch >= '0' && ch <= '9' )){

                        //if it's not number then just setText to previous one
                        volumeTextField.setText(volumeTextField.getText().substring(0,volumeTextField.getText().length()-1));
                    }
                }
            }

        });
        Label composition = new Label("Plate Composition:");
        TextField compositionTextField = new TextField();
        Label concentration = new Label("Concentration(ng/uL):");
        TextField concentrationTextField = new TextField();
        concentrationTextField.lengthProperty().addListener(new ChangeListener<Number>(){

            @Override
            public void changed(ObservableValue<? extends Number> observable, Number oldValue, Number newValue) {

                if(newValue.intValue() > oldValue.intValue()){
                    char ch = concentrationTextField.getText().charAt(oldValue.intValue());
                    System.out.println("Length:"+ oldValue+"  "+ newValue +" "+ch);

                    //Check if the new character is the number or other's
                    if(!(ch >= '0' && ch <= '9' )){

                        //if it's not number then just setText to previous one
                        concentrationTextField.setText(concentrationTextField.getText().substring(0,concentrationTextField.getText().length()-1));
                    }
                }
            }

        });
        Label plasmidName = new Label("Plasmid Name:");
        TextField plasmidTextField = new TextField();
        Label plasmidAntibiotic = new Label("Plasmid Antibiotic:");
        TextField antibioticTextField = new TextField();
        Label rez1 = new Label("Restriction Enzyme 1:");
        TextField rez1TextField = new TextField();
        Label rez2 = new Label("Restriction Enzyme 2:");
        TextField rez2TextField = new TextField();
        Label genomic = new Label("Origin:");
        TextField genomicTextField = new TextField();
        Label ligation1 = new Label("Ligation Part 1:");
        TextField ligation1TextField = new TextField();
        Label ligation2 = new Label("Ligation Part 2:");
        TextField ligation2TextField = new TextField();

        Text addSampleResponse = new Text();
        Button enterAddSample = new Button("Enter");
        enterAddSample.setOnAction(new EventHandler<ActionEvent>() {

            @Override
            public void handle(ActionEvent e) {
                int typepass = 8;
                String strainpass = null;
                int volumepass = 0;
                String compositionpass = null;
                int concentrationpass = 0;
                String plasmidNamepass = null;
                String plasmidAntibioticpass = null;
                String rez1pass = null;
                String rez2pass = null;
                String genomeOriginpass = null;
                String lig1pass = null;
                String lig2pass = null;
                if(sampleTypeBox.getValue() == "Bacterial Culture") {
                    typepass = 0;
                    strainpass = strainTextField.getText();
                }
                if(sampleTypeBox.getValue() == "Glycerol Stock") {
                    typepass = 1;
                    strainpass = strainTextField.getText();
                    volumepass = Integer.parseInt(volumeTextField.getText());
                }
                if(sampleTypeBox.getValue() == "Plate") {
                    typepass = 2;
                    strainpass = strainTextField.getText();
                    compositionpass = compositionTextField.getText();
                }
                if(sampleTypeBox.getValue() == "DNA Sample"){
                    typepass = 3;
                    concentrationpass = Integer.parseInt(concentrationTextField.getText());
                }
                if(sampleTypeBox.getValue() == "Plasmid") {
                    typepass = 4;
                    concentrationpass = Integer.parseInt(concentrationTextField.getText());
                    plasmidNamepass = plasmidTextField.getText();
                    plasmidAntibioticpass = antibioticTextField.getText();
                }
                if(sampleTypeBox.getValue() == "Digest") {
                    typepass = 5;
                    concentrationpass = Integer.parseInt(concentrationTextField.getText());
                    rez1pass = rez1TextField.getText();
                    rez2pass = rez2TextField.getText();
                }
                if(sampleTypeBox.getValue() == "Genomic") {
                    typepass = 6;
                    concentrationpass = Integer.parseInt(concentrationTextField.getText());
                    genomeOriginpass = genomicTextField.getText();
                }
                if(sampleTypeBox.getValue() == "Ligation") {
                    typepass = 7;
                    concentrationpass = Integer.parseInt(concentrationTextField.getText());
                    lig1pass = ligation1TextField.getText();
                    lig2pass = ligation2TextField.getText();
                }

                addSampleResponse.setText(addSample(typepass, strainpass, volumepass ,compositionpass,concentrationpass, plasmidNamepass,
                        plasmidAntibioticpass, rez1pass, rez2pass, genomeOriginpass, lig1pass,lig2pass));
            }
        });
        //entryPane (gridpane)
        addSamplePane = new GridPane();
        addSamplePane.setAlignment(Pos.CENTER);
        addSamplePane.setHgap(10);
        addSamplePane.setVgap(10);
        addSamplePane.setPadding(new Insets(25, 25, 25, 25));
        addSamplePane.setVgap(10);

        //adding all the buttons to the entry pane
        addSamplePane.add(sampleType, 0, 0);
        addSamplePane.add(sampleTypeBox, 1, 0);
        addSamplePane.add(addSampleBack,0,7);                  //check the placement of this button
        addSamplePane.add(enterAddSample,7,7);                   //check the placement of this button
        addSamplePane.add(addSampleResponse,7,8);

        sampleTypeBox.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
                addSamplePane.getChildren().remove(4, addSamplePane.getChildren().size());

                if(sampleTypeBox.getValue()=="Bacterial Culture"){
                    addSamplePane.add(strain, 0, 1);
                    addSamplePane.add(strainTextField, 1, 1);
                }
                if(sampleTypeBox.getValue()=="Glycerol Stock"){
                    addSamplePane.add(strain, 0, 1);
                    addSamplePane.add(strainTextField, 1, 1);
                    addSamplePane.add(volume, 0, 2);
                    addSamplePane.add(volumeTextField, 1, 2);
                }
                if(sampleTypeBox.getValue()=="Plate"){
                    addSamplePane.add(strain, 0, 1);
                    addSamplePane.add(strainTextField, 1, 1);
                    addSamplePane.add(composition, 0, 2);
                    addSamplePane.add(compositionTextField, 1, 2);
                }
                if(sampleTypeBox.getValue()=="DNA Sample"){
                    addSamplePane.add(concentration, 0, 1);
                    addSamplePane.add(concentrationTextField, 1, 1);
                }
                if(sampleTypeBox.getValue()=="Plasmid"){
                    addSamplePane.add(concentration, 0, 1);
                    addSamplePane.add(concentrationTextField, 1, 1);
                    addSamplePane.add(plasmidName, 0, 2);
                    addSamplePane.add(plasmidTextField, 1, 2);
                    addSamplePane.add(plasmidAntibiotic, 0, 3);
                    addSamplePane.add(antibioticTextField, 1, 3);
                }
                if(sampleTypeBox.getValue()=="Ligation"){
                    addSamplePane.add(concentration, 0, 1);
                    addSamplePane.add(concentrationTextField, 1, 1);
                    addSamplePane.add(ligation1, 0, 2);
                    addSamplePane.add(ligation1TextField, 1, 2);
                    addSamplePane.add(ligation2, 0, 3);
                    addSamplePane.add(ligation2TextField, 1, 3);
                }
                if(sampleTypeBox.getValue()=="Genomic"){
                    addSamplePane.add(concentration, 0, 1);
                    addSamplePane.add(concentrationTextField, 1, 1);
                    addSamplePane.add(genomic, 0, 2);
                    addSamplePane.add(genomicTextField, 1, 2);
                }
                if(sampleTypeBox.getValue()=="Digest"){
                    addSamplePane.add(concentration, 0, 1);
                    addSamplePane.add(concentrationTextField, 1, 1);
                    addSamplePane.add(rez1, 0, 2);
                    addSamplePane.add(rez1TextField, 1, 2);
                    addSamplePane.add(rez2, 0, 3);
                    addSamplePane.add(rez2TextField, 1, 3);
                }

            }


        });

        addSampleScene = new Scene(addSamplePane, 1000, 500);

        //todo editSampleScene//////////////////////////////////////////////////////////////////////////////////////////////

        //make buttons
        Label sampleType1 = new Label("Sample Type");
        ChoiceBox sampleTypeBox1 = new ChoiceBox();
        sampleTypeBox1.setItems(FXCollections.observableArrayList("Bacterial Culture", "Glycerol Stock", "Plate", "DNA Sample", "Plasmid", "Ligation", "Genomic", "Digest"));
        Label sampleIDLabel = new Label("Sample ID: ");
        TextField sampleIDTextfield = new TextField();
        sampleIDTextfield.lengthProperty().addListener(new ChangeListener<Number>(){

            @Override
            public void changed(ObservableValue<? extends Number> observable, Number oldValue, Number newValue) {

                if(newValue.intValue() > oldValue.intValue()){
                    char ch = sampleIDTextfield.getText().charAt(oldValue.intValue());
                    System.out.println("Length:"+ oldValue+"  "+ newValue +" "+ch);

                    //Check if the new character is the number or other's
                    if(!(ch >= '0' && ch <= '9' )){

                        //if it's not number then just setText to previous one
                        sampleIDTextfield.setText(sampleIDTextfield.getText().substring(0,sampleIDTextfield.getText().length()-1));
                    }
                }
            }

        });
        Button enterEditSample = new Button("Enter");
        enterEditSample.setOnAction(new EventHandler<ActionEvent>() {

            @Override
            public void handle(ActionEvent e) {
                //editSample(); //todo - tamar- add the right call now
            }
        });

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        Label strain1 = new Label("Strain:");
        TextField strainTextField1 = new TextField();
        Label volume1 = new Label("Volume(mL):");
        TextField volumeTextField1 = new TextField();
        volumeTextField1.lengthProperty().addListener(new ChangeListener<Number>(){

            @Override
            public void changed(ObservableValue<? extends Number> observable, Number oldValue, Number newValue) {

                if(newValue.intValue() > oldValue.intValue()){
                    char ch = volumeTextField1.getText().charAt(oldValue.intValue());
                    System.out.println("Length:"+ oldValue+"  "+ newValue +" "+ch);

                    //Check if the new character is the number or other's
                    if(!(ch >= '0' && ch <= '9' )){

                        //if it's not number then just setText to previous one
                        volumeTextField1.setText(volumeTextField1.getText().substring(0,volumeTextField1.getText().length()-1));
                    }
                }
            }

        });
        Label composition1 = new Label("Plate Composition:");
        TextField compositionTextField1 = new TextField();
        Label concentration1 = new Label("Concentration(ng/uL):");
        TextField concentrationTextField1 = new TextField();
        concentrationTextField1.lengthProperty().addListener(new ChangeListener<Number>(){

            @Override
            public void changed(ObservableValue<? extends Number> observable, Number oldValue, Number newValue) {

                if(newValue.intValue() > oldValue.intValue()){
                    char ch = concentrationTextField1.getText().charAt(oldValue.intValue());
                    System.out.println("Length:"+ oldValue+"  "+ newValue +" "+ch);

                    //Check if the new character is the number or other's
                    if(!(ch >= '0' && ch <= '9' )){

                        //if it's not number then just setText to previous one
                        concentrationTextField1.setText(concentrationTextField1.getText().substring(0,concentrationTextField1.getText().length()-1));
                    }
                }
            }

        });
        Label plasmidName1 = new Label("Plasmid Name:");
        TextField plasmidTextField1 = new TextField();
        Label plasmidAntibiotic1 = new Label("Plasmid Antibiotic:");
        TextField antibioticTextField1 = new TextField();
        Label rez11 = new Label("Restriction Enzyme 1:");
        TextField rez1TextField1 = new TextField();
        Label rez21 = new Label("Restriction Enzyme 2:");
        TextField rez2TextField1 = new TextField();
        Label genomic1 = new Label("Origin:");
        TextField genomicTextField1 = new TextField();
        Label ligation11 = new Label("Ligation Part 1:");
        TextField ligation1TextField1 = new TextField();
        Label ligation21 = new Label("Ligation Part 2:");
        TextField ligation2TextField1 = new TextField();
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////



        //entryPane (gridpane)
        editSamplePane = new GridPane();
        editSamplePane.setAlignment(Pos.CENTER);
        editSamplePane.setHgap(10);
        editSamplePane.setVgap(10);
        editSamplePane.setPadding(new Insets(25, 25, 25, 25));
        editSamplePane.setVgap(10);
        //adding all the buttons to the entry pane
        editSamplePane.add(sampleType1,0, 0);
        editSamplePane.add(sampleTypeBox1, 1, 0);
        editSamplePane.add(sampleIDLabel, 2, 0);
        editSamplePane.add(sampleIDTextfield, 3, 0);
        editSamplePane.add(editSampleBack,0,7);                  //check the placement of this button
        editSamplePane.add(enterEditSample,7,7);
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        sampleTypeBox1.setOnAction(new EventHandler<ActionEvent>() {
            @Override
            public void handle(ActionEvent event) {
                editSamplePane.getChildren().remove(6, editSamplePane.getChildren().size());

                if(sampleTypeBox1.getValue()=="Bacterial Culture"){
                    editSamplePane.add(strain1, 0, 1);
                    editSamplePane.add(strainTextField1, 1, 1);
                }
                if(sampleTypeBox1.getValue()=="Glycerol Stock"){
                    editSamplePane.add(strain1, 0, 1);
                    editSamplePane.add(strainTextField1, 1, 1);
                    editSamplePane.add(volume1, 0, 2);
                    editSamplePane.add(volumeTextField1, 1, 2);
                }
                if(sampleTypeBox1.getValue()=="Plate"){
                    editSamplePane.add(strain1, 0, 1);
                    editSamplePane.add(strainTextField1, 1, 1);
                    editSamplePane.add(composition1, 0, 2);
                    editSamplePane.add(compositionTextField1, 1, 2);
                }
                if(sampleTypeBox1.getValue()=="DNA Sample"){
                    editSamplePane.add(concentration1, 0, 1);
                    editSamplePane.add(concentrationTextField1, 1, 1);
                }
                if(sampleTypeBox1.getValue()=="Plasmid"){
                    editSamplePane.add(concentration1, 0, 1);
                    editSamplePane.add(concentrationTextField1, 1, 1);
                    editSamplePane.add(plasmidName1, 0, 2);
                    editSamplePane.add(plasmidTextField1, 1, 2);
                    editSamplePane.add(plasmidAntibiotic1, 0, 3);
                    editSamplePane.add(antibioticTextField1, 1, 3);
                }
                if(sampleTypeBox1.getValue()=="Ligation"){
                    editSamplePane.add(concentration1, 0, 1);
                    editSamplePane.add(concentrationTextField1, 1, 1);
                    editSamplePane.add(ligation11, 0, 2);
                    editSamplePane.add(ligation1TextField1, 1, 2);
                    editSamplePane.add(ligation21, 0, 3);
                    editSamplePane.add(ligation2TextField1, 1, 3);
                }
                if(sampleTypeBox1.getValue()=="Genomic"){
                    editSamplePane.add(concentration1, 0, 1);
                    editSamplePane.add(concentrationTextField1, 1, 1);
                    editSamplePane.add(genomic1, 0, 2);
                    editSamplePane.add(genomicTextField1, 1, 2);
                }
                if(sampleTypeBox1.getValue()=="Digest"){
                    editSamplePane.add(concentration1, 0, 1);
                    editSamplePane.add(concentrationTextField1, 1, 1);
                    editSamplePane.add(rez11, 0, 2);
                    editSamplePane.add(rez1TextField1, 1, 2);
                    editSamplePane.add(rez21, 0, 3);
                    editSamplePane.add(rez2TextField1, 1, 3);
                }

            }


        });

        editSampleScene = new Scene(editSamplePane, 1000, 500);
